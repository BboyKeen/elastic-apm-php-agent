<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/context.proto

namespace Protos\Context\Request;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\Internal\GPBWrapperUtils;

/**
 * Generated from protobuf message <code>protos.Context.Request.Socket</code>
 */
class Socket extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bool encrypted = 1;</code>
     */
    private $encrypted = false;
    /**
     * Generated from protobuf field <code>string remote_address = 2[json_name = "remote_address"];</code>
     */
    private $remote_address = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $encrypted
     *     @type string $remote_address
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Protos\Context::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bool encrypted = 1;</code>
     * @return bool
     */
    public function getEncrypted()
    {
        return $this->encrypted;
    }

    /**
     * Generated from protobuf field <code>bool encrypted = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setEncrypted($var)
    {
        GPBUtil::checkBool($var);
        $this->encrypted = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string remote_address = 2[json_name = "remote_address"];</code>
     * @return string
     */
    public function getRemoteAddress()
    {
        return $this->remote_address;
    }

    /**
     * Generated from protobuf field <code>string remote_address = 2[json_name = "remote_address"];</code>
     * @param string $var
     * @return $this
     */
    public function setRemoteAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->remote_address = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Socket::class, \Protos\Context_Request_Socket::class);

