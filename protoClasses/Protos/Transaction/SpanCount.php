<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/transactionv2.proto

namespace Protos\Transaction;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\Internal\GPBWrapperUtils;

/**
 * Generated from protobuf message <code>protos.Transaction.SpanCount</code>
 */
class SpanCount extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int32 started = 1;</code>
     */
    private $started = 0;
    /**
     * Generated from protobuf field <code>int32 dropped = 2;</code>
     */
    private $dropped = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $started
     *     @type int $dropped
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Protos\Transactionv2::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int32 started = 1;</code>
     * @return int
     */
    public function getStarted()
    {
        return $this->started;
    }

    /**
     * Generated from protobuf field <code>int32 started = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setStarted($var)
    {
        GPBUtil::checkInt32($var);
        $this->started = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 dropped = 2;</code>
     * @return int
     */
    public function getDropped()
    {
        return $this->dropped;
    }

    /**
     * Generated from protobuf field <code>int32 dropped = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setDropped($var)
    {
        GPBUtil::checkInt32($var);
        $this->dropped = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(SpanCount::class, \Protos\Transaction_SpanCount::class);

